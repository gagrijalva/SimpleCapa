@model SimpleCapaApp.Models.Task

@using (Ajax.BeginForm("Create", new AjaxOptions()
{
    UpdateTargetId = "task"
})) 
{
    @Html.AntiForgeryToken()
    

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <tr>
        <td>
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </td>

        <td>
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </td>

        <td>
            @Html.DropDownList("UserId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
        </td>

        <td>
            @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
        </td>
        <td>
            <input type="hidden" name="CapaId" value="@ViewBag.CapaId"  />
            <input type="hidden" name="CapaStep" value="@ViewBag.CapaStep" />
            <input type="submit" value="Create" class="btn btn-default" />
        </td>

    </tr>
    
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
